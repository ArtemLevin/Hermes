version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: tutor
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U app -d tutor"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  api:
    build: ./api
    environment:
      DATABASE_URL: postgresql+psycopg2://app:app@db:5432/tutor
      REDIS_URL: redis://redis:6379/0
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SECRET_KEY: devsecret
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      mailhog:
        condition: service_started
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 10

  worker:
    build: ./api
    command: ["python","-m","rq","worker","default"]
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started

  # Новый сервис для планировщика периодических задач
  scheduler:
    build: ./api
    command: ["python","jobs.py"]
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started

  web:
    build: ./web
    ports: ["5173:5173"]
    depends_on:
      api:
        condition: service_healthy

  mailhog:
    image: mailhog/mailhog
    ports: ["8025:8025","1025:1025"]

volumes:
  pgdata: {}
